swagger: '2.0'
info:
  title: Fake Store API
  description: API simulada de uma loja virtual para testes e aprendizado
  version: 1.0.0
host: fakestoreapi.com
basePath: /
schemes:
  - https
paths:
  /products:
    get:
      tags:
        - Products
      summary: Lista todos os produtos
      responses:
        '200':
          description: Lista de produtos
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
    post:
      tags:
        - Products
      summary: Cria um novo produto
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '201':
          description: Produto criado
          schema:
            $ref: '#/definitions/Product'
  /products/{id}:
    get:
      tags:
        - Products
      summary: Retorna um produto por ID
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Produto encontrado
          schema:
            $ref: '#/definitions/Product'
        '404':
          description: Produto não encontrado
    put:
      tags:
        - Products
      summary: Atualiza um produto
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: Produto atualizado
          schema:
            $ref: '#/definitions/Product'
    delete:
      tags:
        - Products
      summary: Deleta um produto
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '204':
          description: Produto deletado
  /users:
    get:
      tags:
        - Users
      summary: Lista todos os usuários
      responses:
        '200':
          description: Lista de usuários
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - Users
      summary: Cria um novo usuário
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: Usuário criado com sucesso
          schema:
            $ref: '#/definitions/User'
  /users/{id}:
    get:
      tags:
        - Users
      summary: Retorna um usuário por ID
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Usuário encontrado
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Usuário não encontrado
    put:
      tags:
        - Users
      summary: Atualiza um usuário por ID
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Usuário atualizado
          schema:
            $ref: '#/definitions/User'
    delete:
      tags:
        - Users
      summary: Deleta um usuário por ID
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '204':
          description: Usuário deletado com sucesso
  /carts:
    get:
      tags:
        - Carts
      summary: Lista todos os carrinhos
      responses:
        '200':
          description: Lista de carrinhos
          schema:
            type: array
            items:
              $ref: '#/definitions/Cart'
    post:
      tags:
        - Carts
      summary: Cria um novo carrinho
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Cart'
      responses:
        '201':
          description: Carrinho criado
          schema:
            $ref: '#/definitions/Cart'
  /carts/{id}:
    put:
      tags:
        - Carts
      summary: Atualiza um carrinho por ID
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Cart'
      responses:
        '200':
          description: Carrinho atualizado com sucesso
          schema:
            $ref: '#/definitions/Cart'
    delete:
      tags:
        - Carts
      summary: Deleta um carrinho por ID
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '204':
          description: Carrinho deletado com sucesso
  /carts/user/{userId}:
    get:
      tags:
        - Carts
      summary: Lista carrinhos de um usuário
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Carrinhos do usuário
          schema:
            type: array
            items:
              $ref: '#/definitions/Cart'
definitions:
  Product:
    type: object
    properties:
      id:
        type: integer
        example: 1
      title:
        type: string
      price:
        type: number
      description:
        type: string
      category:
        type: string
      image:
        type: string
  User:
    type: object
    properties:
      id:
        type: integer
        example: 1
      email:
        type: string
      username:
        type: string
      password:
        type: string
      name:
        type: object
        properties:
          firstname:
            type: string
          lastname:
            type: string
      address:
        type: object
        properties:
          city:
            type: string
          street:
            type: string
          number:
            type: integer
          zipcode:
            type: string
          geolocation:
            type: object
            properties:
              lat:
                type: string
              long:
                type: string
      phone:
        type: string
  Cart:
    type: object
    properties:
      id:
        type: integer
        example: 1
      userId:
        type: integer
      date:
        type: string
        format: date
      products:
        type: array
        items:
          type: object
          properties:
            productId:
              type: integer
            quantity:
              type: integer
