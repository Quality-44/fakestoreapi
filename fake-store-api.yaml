openapi: 3.0.3
info:
  title: Fake Store API
  description: API fake para testes e protótipos de loja virtual.
  version: "1.0.0"
servers:
  - url: https://fakestoreapi.com

tags:
  - name: Products
    description: Gerenciamento de produtos
  - name: Carts
    description: Gerenciamento de carrinhos de compras
  - name: Users
    description: Gerenciamento de usuários
  - name: Auth
    description: Autenticação de usuários

paths:
  /products:
    get:
      tags:
        - Products
      summary: Lista todos os produtos
      responses:
        '200':
          description: Lista de produtos
    post:
      tags:
        - Products
      summary: Cria um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Produto criado com sucesso

  /products/{id}:
    get:
      tags:
        - Products
      summary: Retorna um produto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Produto encontrado
    put:
      tags:
        - Products
      summary: Atualiza um produto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Produto atualizado
    delete:
      tags:
        - Products
      summary: Deleta um produto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Produto deletado

  /products/category/{category}:
    get:
      tags:
        - Products
      summary: Retorna produtos de uma categoria específica
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de produtos da categoria

  /products/categories:
    get:
      tags:
        - Products
      summary: Lista todas as categorias
      responses:
        '200':
          description: Lista de categorias

  /carts:
    get:
      tags:
        - Carts
      summary: Lista todos os carrinhos
      responses:
        '200':
          description: Lista de carrinhos
    post:
      tags:
        - Carts
      summary: Cria um novo carrinho
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          description: Carrinho criado

  /carts/{id}:
    get:
      tags:
        - Carts
      summary: Retorna um carrinho por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Carrinho encontrado
    put:
      tags:
        - Carts
      summary: Atualiza um carrinho por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          description: Carrinho atualizado
    delete:
      tags:
        - Carts
      summary: Deleta um carrinho por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Carrinho deletado

  /carts/user/{userId}:
    get:
      tags:
        - Carts
      summary: Retorna carrinhos de um usuário
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de carrinhos do usuário

  /users:
    get:
      tags:
        - Users
      summary: Lista todos os usuários
      responses:
        '200':
          description: Lista de usuários
    post:
      tags:
        - Users
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuário criado

  /users/{id}:
    get:
      tags:
        - Users
      summary: Retorna um usuário por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário encontrado
    put:
      tags:
        - Users
      summary: Atualiza um usuário por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuário atualizado
    delete:
      tags:
        - Users
      summary: Deleta um usuário por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário deletado

  /auth/login:
    post:
      tags:
        - Auth
      summary: Autentica um usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Token JWT retornado

components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
        price:
          type: number
        description:
          type: string
        category:
          type: string
        image:
          type: string

    Cart:
      type: object
      properties:
        userId:
          type: integer
        date:
          type: string
          format: date
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: integer
              quantity:
                type: integer

    User:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
        name:
          type: object
          properties:
            firstname:
              type: string
            lastname:
              type: string
        address:
          type: object
          properties:
            city:
              type: string
            street:
              type: string
            number:
              type: integer
            zipcode:
              type: string
            geolocation:
              type: object
              properties:
                lat:
                  type: string
                long:
                  type: string
        phone:
          type: string
