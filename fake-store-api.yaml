openapi: 3.0.3
info:
  title: Fake Store API
  description: API fake para testes e protótipos de loja virtual.
  version: "1.0.0"
servers:
  - url: https://fakestoreapi.com

tags:
  - name: Products
    description: Gerenciamento de produtos
  - name: Carts
    description: Gerenciamento de carrinhos de compras
  - name: Users
    description: Gerenciamento de usuários
  - name: Auth
    description: Autenticação de usuários

paths:
  /products:
    get:
      tags:
        - Products
      summary: Lista todos os produtos
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products
      summary: Cria um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      tags:
        - Products
      summary: Retorna um produto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - Products
      summary: Atualiza um produto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Produto atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - Products
      summary: Deleta um produto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Produto deletado com sucesso
          content: {}
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /products/category/{category}:
    get:
      tags:
        - Products
      summary: Retorna produtos de uma categoria específica
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de produtos da categoria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/categories:
    get:
      tags:
        - Products
      summary: Lista todas as categorias
      responses:
        '200':
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /carts:
    get:
      tags:
        - Carts
      summary: Lista todos os carrinhos
      responses:
        '200':
          description: Lista de carrinhos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
    post:
      tags:
        - Carts
      summary: Cria um novo carrinho
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '201':
          description: Carrinho criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'

  /carts/{id}:
    get:
      tags:
        - Carts
      summary: Retorna um carrinho por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Carrinho encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Carrinho não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - Carts
      summary: Atualiza um carrinho por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          description: Carrinho atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Carrinho não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - Carts
      summary: Deleta um carrinho por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Carrinho deletado com sucesso
          content: {}
        '404':
          description: Carrinho não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /carts/user/{userId}:
    get:
      tags:
        - Carts
      summary: Retorna carrinhos de um usuário
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de carrinhos do usuário
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref:
::contentReference[oaicite:0]{index=0}
 
